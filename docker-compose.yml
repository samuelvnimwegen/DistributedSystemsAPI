services:
  movie_api:
    build: movie_api
    restart: always
    depends_on:
      movie_db:
        condition: service_healthy

  activity_api:
    build: activity_api
    restart: always
    depends_on:
      activity_db:
        condition: service_healthy

  preference_api:
    build: preference_api
    restart: always
    depends_on:
      preference_db:
        condition: service_healthy

  user_api:
    build: user_api
    restart: always
    depends_on:
      user_db:
        condition: service_healthy

  frontend:
    build: ./frontend
    restart: always
    ports:
      - "5173:5173"
    depends_on:
      - movie_api
      - activity_api
      - preference_api
      - user_api
    networks:
      - default
    volumes:
      - ./frontend:/app
      - node_modules:/app/node_modules
    command: npm run dev
    working_dir: /app
    environment:
      - CHOKIDAR_USEPOLLING=true

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/dist:/usr/share/nginx/html
    depends_on:
      - frontend
      - activity_api
      - movie_api
      - preference_api
      - user_api

  movie_db:
    image: postgres:17-alpine
    container_name: movie_db
    restart: always
    environment:
      POSTGRES_USER: ds_user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: movie_db
    volumes:
      - movie_pgdata:/var/lib/postgresql/data
    networks:
      - default
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "ds_user", "-d", "movie_db" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    ports:
      - "5433:5432" # Expose Postgres to the host machine for debugging purposes

  activity_db:
    image: postgres:17-alpine
    container_name: activity_db
    restart: always
    environment:
      POSTGRES_USER: ds_user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: activity_db
    volumes:
      - activity_pgdata:/var/lib/postgresql/data
    networks:
      - default
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "ds_user", "-d", "activity_db" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    ports:
      - "5434:5432" # Expose Postgres to the host machine for debugging purposes

  preference_db:
    image: postgres:17-alpine
    container_name: preference_db
    restart: always
    environment:
      POSTGRES_USER: ds_user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: preference_db
    volumes:
      - preference_pgdata:/var/lib/postgresql/data
    networks:
      - default
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "ds_user", "-d", "preference_db" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    ports:
      - "5435:5432" # Expose Postgres to the host machine for debugging purposes

  user_db:
    image: postgres:17-alpine
    container_name: user_db
    restart: always
    environment:
      POSTGRES_USER: ds_user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: user_db
    volumes:
      - user_pgdata:/var/lib/postgresql/data
    networks:
      - default
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "ds_user", "-d", "user_db" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    ports:
      - "5436:5432" # Expose Postgres to the host machine for debugging purposes

volumes:
  user_pgdata:
  preference_pgdata:
  activity_pgdata:
  movie_pgdata:
  node_modules:
